from api.shorturl.repository.shorturl_repository import ShortUrlRepository
from api.shorturl.converter.shorturl_converter import ShortUrlConverter
from api.shorturl.repository.visit_history_repository import VisitHistoryRepository
from api.shorturl.entity.shorturl import ShortUrl
from api.shorturl.entity.visit_history import VisitHistory
from api.common.logger import logger

from exceptions import *

import time


class ShortUrlService:
    def __init__(self, db):
        self.shorturl_repository = ShortUrlRepository(db)
        self.visit_history_repository = VisitHistoryRepository(db)

    def create(self, source, account):
        shorturl = ShortUrl(user_id=account.id, user_uid=account.uid, source=source, status='REGISTERED')
        self.shorturl_repository.save(shorturl)
        return ShortUrlConverter.to_dto(shorturl)

    def get_shorturl(self, url, request_ip = None):
        shorturl = self.shorturl_repository.find_by_shorturl(url)
        if not shorturl:
            raise ShortUrlNotExistException(url)

        result = ShortUrlConverter.to_dto(shorturl)
        return result
